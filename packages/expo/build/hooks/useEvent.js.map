{"version":3,"file":"useEvent.js","sourceRoot":"","sources":["../../src/hooks/useEvent.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAY5C,MAAM,UAAU,QAAQ,CACtB,OAAiC,EACjC,KAAuB;IAEvB,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,QAAQ,CAAgD,EAAE,CAAC,CAAC;IAElG,SAAS,CAAC,GAAG,EAAE;QACb,MAAM,QAAQ,GAAG,CAAC,GAAG,IAA8C,EAAE,EAAE;YACrE,cAAc,CAAC,IAAI,CAAC,CAAC;QACvB,CAAC,CAAC;QACF,MAAM,YAAY,GAAG,OAAO,CAAC,WAAW,CAAC,KAAK,EAAE,QAAwC,CAAC,CAAC;QAC1F,OAAO,GAAG,EAAE;YACV,YAAY,CAAC,MAAM,EAAE,CAAC;QACxB,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;IAErB,OAAO,WAAW,CAAC;AACrB,CAAC;AAED,SAAS,CAAC;IACR,mEAAmE;IACnE,MAAM,MAAM,GAAG,IAAI,WAAW,EAAE,CAAC;IACjC,MAAM,CAAC,QAAQ,EAAE,QAAQ,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAEtD,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IACzB,QAAQ,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;IAC9B,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC3B,CAAC","sourcesContent":["import type { EventEmitter, EventsMap } from 'expo-modules-core/src/ts-declarations/EventEmitter';\nimport { useEffect, useState } from 'react';\n\ndeclare class SharedObject<TEventsMap extends EventsMap = Record<never, never>>\n  extends EventEmitter<TEventsMap>\n  implements EventEmitter<TEventsMap> {}\n\ntype VideoPlayerEvents = {\n  playToEnd(): void;\n  dupa(newValue: string, oldValue: number): void;\n};\ndeclare class VideoPlayer extends SharedObject<VideoPlayerEvents> {}\n\nexport function useEvent<TEventsMap extends EventsMap>(\n  emitter: EventEmitter<TEventsMap>,\n  event: keyof TEventsMap\n): Parameters<TEventsMap[keyof TEventsMap]> | [] {\n  const [eventParams, setEventParams] = useState<Parameters<TEventsMap[keyof TEventsMap]> | []>([]);\n\n  useEffect(() => {\n    const listener = (...args: Parameters<TEventsMap[keyof TEventsMap]>) => {\n      setEventParams(args);\n    };\n    const subscription = emitter.addListener(event, listener as TEventsMap[keyof TEventsMap]);\n    return () => {\n      subscription.remove();\n    };\n  }, [emitter, event]);\n\n  return eventParams;\n}\n\nfunction A() {\n  // Also see `expo-modules-core/src/ts-declarations/EventEmitter.ts`\n  const player = new VideoPlayer();\n  const [newValue, oldValue] = useEvent(player, 'dupa');\n\n  useEvent(player, 'kupa');\n  useEvent(player, 'playToEnd');\n  useEvent(player, 'zupa');\n}\n"]}